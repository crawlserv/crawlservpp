{
	"#include": [ "include/network.json" ],
	
	"crawler": {
		"label": "Crawling",
		"open": true,
		
		"archives": {
			"type": "bool",
			"default": false,
			"label": "Crawl archives",
			"description": "Crawl archived pages.",
			"simple": true,
			"position": 6
		},
		"archives.names": {
			"type": "array",
			"item-type": "string",
			"default": [ "archive.org" ],
			"description": "Names of archives to crawl.",
			"simple": false
		},
		"archives.only": {
			"type": "bool",
			"default": false,
			"description": "Crawl archived pages ONLY. Will be ignored if crawling archived pages is disabled.",
			"simple": false
		},
		"archives.urls.memento": {
			"type": "array",
			"item-type": "string",
			"default": [ "http://web.archive.org/web/" ],
			"description": "Memento URI template for archives to crawl. To be followed by YYYYMMDDHHMMSS/URI (date and URI) of the memento to crawl.",
			"simple": false
		},
		"archives.urls.skip": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"description": "Mementos matching these URLs will be skipped.",
			"simple": false
		},
		"archives.urls.timemap": {
			"type": "array",
			"item-type": "string",
			"default": [ "http://web.archive.org/web/timemap/link/" ],
			"description": "Timemap URI template for archives to crawl. To be followed by the URI of the page to crawl.",
			"simple": false
		},
		"lock": {
			"type": "number",
			"default": 300,
			"min": 1,
			"description": "Time for which to lock URLs that are currently being processed (in s).",
			"simple": false
		},
		"logging": {
			"type": "enum",
			"default": 1,
			"enum-values": [
				"silent",
				"default",
				"extended",
				"verbose"
			],
			"label": "Logging mode:",
			"description": "Level of logging activity.",
			"simple": true,
			"position": 13
		},
		"max.batch.size": {
			"type": "number",
			"default": 500,
			"min": 1,
			"max": 65535,
			"description": "Maximum number of URLs to be processed in one MySQL query.",
			"simple": false
		},
		"params.add": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "URL parameters to add:",
			"description": "URL parameters that will be added shortly before retrieving the content (but not saved in the URL list).",
			"simple": true,
			"position": 12
		},
		"params.blacklist": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"description": "Parameters in URLs that will be ignored.",
			"simple": false
		},
		"params.whitelist": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "URL parameters to keep:",
			"description": "Parameters in URLs that will not be ignored.",
			"simple": true,
			"position": 11
		},
		"queries.blacklist.cont": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"default": [],
			"description": "Content matching one of these queries will not be crawled.",
			"simple": false
		},
		"queries.blacklist.types": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"description": "Content types matching one of these queries will not be crawled.",
			"simple": false
		},
		"queries.blacklist.urls": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"label": "Skip URLs:",
			"description": "URLs matching one of these queries will not be added.",
			"simple": true,
			"position": 9
		},
		"queries.links": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"single",
				"multi"
			],
			"default": [],
			"label": "Link extraction:",
			"description": "Queries on content to find URLs.",
			"simple": true,
			"position": 4
		},
		"queries.links.blacklist.cont": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"default": [],
			"description": "Content matching one of these queries will not be used for link extraction.",
			"simple": false
		},
		"queries.links.blacklist.types": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"description": "Content types matching one of these queries will not be used for link extraction.",
			"simple": false
		},
		"queries.links.blacklist.urls": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"description": "URLs matching one of these queries will not be used for link extraction.",
			"simple": false
		},
		"queries.links.whitelist.cont": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"default": [],
			"description": "If not empty, only content matching one of these queries will be used for link extraction.",
			"simple": false
		},
		"queries.links.whitelist.types": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"label": "",
			"description": "If not empty, only content types matching one of these queries will be used for link extraction.",
			"simple": false
		},
		"queries.links.whitelist.urls": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"description": "If not empty, only URLs matching one of these queries will be used for link extraction.",
			"simple": false
		},
		"queries.whitelist.cont": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"default": [],
			"description": "If not empty, only content matching one of these queries will be crawled.",
			"simple": false
		},
		"queries.whitelist.types": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"label": "",
			"description": "If not empty, only content types matching one of these queries will be crawled.",
			"simple": false
		},
		"queries.whitelist.urls": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": [],
			"description": "If not empty, only URLs matching one of these queries will be crawled.",
			"simple": false
		},
		"recrawl": {
			"type": "bool",
			"default": false,
			"label": "Re-crawl URLs",
			"description": "Re-crawl already crawled URLs.",
			"simple": true,
			"position": 5
		},
		"recrawl.always": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Always re-crawl:",
			"description": "List of URLs that will always be re-crawled.",
			"simple": true,
			"position": 8
		},
		"recrawl.start": {
			"type": "bool",
			"default": true,
			"label": "Re-crawl start page",
			"description": "Re-crawl the start page every time to keep the URL list up-to-date.",
			"simple": true,
			"position": 2
		},
		"remove.xml.instructions": {
			"type": "bool",
			"default": true,
			"description": "Remove XML processing instructions ('<?xml:...>')' before parsing HTML.",
			"simple": false
		},
		"repair.cdata": {
			"type": "bool",
			"default": true,
			"description": "Try to repair CData when parsing HTML/XML.",
			"simple": false
		},
		"repair.comments": {
			"type": "bool",
			"default": true,
			"description": "Try to repair broken HTML/XML comments.",
			"simple": false
		},
		"restart.after": {
			"type": "number",
			"default": -1,
			"min": -1,
			"max": 8640000,
			"label": "Continue crawling after (s):",
			"description": "Time (in s) after which to re-crawl custom URLs once crawling has been completed (-1=deactivated).",
			"position": 15,
			"simple": true
		},
		"retries": {
			"type": "number",
			"default": 720,
			"min": -1,
			"label": "Re-tries:",
			"description": "Number of re-tries on connection errors (-1=infinite).",
			"simple": true,
			"position": 10
		},
		"retry.archive": {
			"type": "bool",
			"default": true,
			"label": "Re-try archives",
			"description": "Re-try when retrieving the archived pages fails.",
			"simple": true,
			"position": 6
		},
		"retry.empty": {
			"type": "bool",
			"default": true,
			"description": "Empty responses will be handled like connection errors.",
			"simple": false
		},
		"retry.http": {
			"type": "array",
			"item-type": "number",
			"default": [ 429, 502, 503, 504, 521, 522, 524 ],
			"min": 400,
			"max": 599,
			"description": "HTTP errors that will be handled like connection errors.",
			"simple": false
		},
		"sleep.error": {
			"type": "number",
			"default": 10000,
			"min": 0,
			"description": "Sleeping time (in ms) on connection errors.",
			"simple": false
		},
		"sleep.http": {
			"type": "number",
			"default": 0,
			"min": 0,
			"description": "Time (in ms) that will be waited between HTTP requests.",
			"simple": false
		},
		"sleep.idle": {
			"type": "number",
			"default": 5000,
			"min": 100,
			"description": "Time (in ms) that will be waited before checking for new URLs when all URLs have been crawled.",
			"simple": false
		},
		"sleep.mysql": {
			"type": "number",
			"default": 60,
			"min": 1,
			"description": "Time (in s) to wait before the first try to re-connect to the MySQL server. After that time, the current database operation will be lost.",
			"simple": false
		},
		"sleep.when.finished": {
			"type": "number",
			"default": 5000,
			"min": 100,
			"description": "Time (in ms) to wait each tick when finished.",
			"simple": false
		},
		"start": {
			"type": "string",
			"default": "/",
			"label": "Start page:",
			"description": "Starting point for crawling (should start with / except for cross-domain websites).",
			"simple": true,
			"position": 1
		},
		"start.ignore": {
			"type": "bool",
			"default": false,
			"label": "Ignore start page",
			"description": "Do not crawl the start page.",
			"simple": true,
			"position": 3
		},
		"tidy.errors": {
			"type": "number",
			"min": 0,
			"default": 0,
			"description": "Number  of tidyhtml errors to log (if logging is enabled).",
			"simple": false
		},
		"tidy.warnings": {
			"type": "bool",
			"default": false,
			"description": "Log tidyhtml warnings (if logging is enabled).",
			"simple": false
		},
		"timing": {
			"type": "bool",
			"default": false,
			"description": "Calculate timing statistics.",
			"simple": false
		},
		"url.case.sensitive": {
			"type": "bool",
			"default": true,
			"description": "URLs are case-sensitive. WARNING: Changing invalidates the hashs of existing URLs!",
			"simple": false
		},
		"url.chunks": {
			"type": "number",
			"default": 5000,
			"min": 1,
			"description": "Number of crawled URLs to be processed at once without possible interruption.",
			"simple": false
		},
		"url.debug": {
			"type": "bool",
			"default": false,
			"description": "Perform additional check for duplicates after URL insertion (for debugging purposes only).",
			"simple": false
		},
		"url.max.length": {
			"type": "number",
			"default": 2000,
			"min": 1,
			"max": 2000,
			"description": "Maximum length of URLs to add.",
			"simple": false
		},
		"url.startup.check": {
			"type": "bool",
			"default": true,
			"label": "Check URL list on startup",
			"description": "Check the URL list before starting to crawl.",
			"simple": true,
			"position": 14
		},
		"warnings.file": {
			"type": "bool",
			"default": false,
			"description": "Warn when files are found (as opposed to folders).",
			"simple": false
		},
		"xml": {
			"type": "bool",
			"default": false,
			"description": "Always save crawled content as cleaned XML.",
			"simple": false
		}
	},
	"custom": {
		"label": "Custom URLs",
		"open": false,
		
		"counters": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Counter variables:",
			"description": "List of counter variables to be replaced in custom URLs.",
			"simple": true,
			"position": 4
		},
		"counters.alias": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Counter alias:",
			"description": "Alias for the counter variable with the same array index.",
			"simple": true,
			"position": 8
		},
		"counters.alias.add": {
			"type": "array",
			"item-type": "number",
			"default": [],
			"label": "Increase alias value by:",
			"description": "Value to add to the counter alias with the same array index.",
			"simple": true,
			"position": 9
		},
		"counters.end": {
			"type": "array",
			"item-type": "number",
			"default": [],
			"label": "Stop counter at:",
			"description": "End value for the counter with the same array index.",
			"simple": true,
			"position": 6
		},
		"counters.global": {
			"type": "bool",
			"default": true,
			"label": "Use counters globally",
			"description": "Use every counter for all custom URLs. Otherwise a counters will only be used for URLs with the same array index.",
			"simple": true,
			"position": 10
		},
		"counters.start": {
			"type": "array",
			"item-type": "number",
			"default": [],
			"label": "Start counter at:",
			"description": "Start value for the counter with the same array index.",
			"simple": true,
			"position": 5
		},
		"counters.step": {
			"type": "array",
			"item-type": "number",
			"default": [],
			"label": "Increase counter by:",
			"description": "Step value for the counter with the same array index.",
			"simple": true,
			"position": 7
		},
		"recrawl": {
			"type": "bool",
			"default": true,
			"label": "Re-crawl custom URLs",
			"description": "Always re-crawl custom URLs.",
			"simple": true,
			"position": 11
		},
		"robots": {
			"type": "bool",
			"default": false,
			"label": "Add sitemaps in 'robots.txt'",
			"description": "Adds the sitemaps specified in ''robots.txt'' as custom URLs.",
			"simple": true,
			"position": 2
		},
		"token.headers": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"description": "Custom HTTP headers to be used for ALL tokens.",
			"simple": false
		},
		"tokens": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Token variables:",
			"description": "List of token variables to be replaced in custom URLs.",
			"simple": true,
			"position": 12
		},
		"tokens.cookies": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Token cookies:",
			"description": "Custom HTTP Cookie header for the token with the same array index.",
			"simple": true,
			"position": 13
		},
		"tokens.keep": {
			"type": "array",
			"item-type": "number",
			"default": [],
			"min": 0,
			"max": 4000000,
			"label": "Keep token for (s):",
			"description": "Time (in s) until the token with the same array index gets invalid.",
			"simple": true,
			"position": 18
		},
		"tokens.query": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"bool",
				"single"
			],
			"default": [],
			"label": "Token queries:",
			"description": "Query to extract the token with the same array index.",
			"simple": true,
			"position": 16
		},
		"tokens.required": {
			"type": "array",
			"item-type": "bool",
			"default": [],
			"label": "Tokens required:",
			"description": "Determines whether an error occurs if the token with the same array index is empty.",
			"simple": true,
			"position": 17
		},
		"tokens.source": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Token sources:",
			"description": "Source URL for the token with the same array index (absolute link without protocol).",
			"simple": true,
			"position": 14
		},
		"tokens.use.post": {
			"type": "array",
			"item-type": "bool",
			"default": [],
			"label": "Use POST for tokens:",
			"description": "Use HTTP POST instead of GET for the token with the same array index.",
			"simple": true,
			"position": 15
		},
		"urls": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Custom URLs:",
			"description": "Custom URLs for crawling (should all start with / except for cross-domain websites).",
			"simple": true,
			"position": 1
		},
		"use.post": {
			"type": "bool",
			"default": false,
			"label": "Use POST for custom URLs",
			"description": "Use HTTP POST instead of HTTP GET to retrieve custom URLs (except after dynamic redirects).",
			"simple": true,
			"position": 3
		}
	},
	"expected": {
		"label": "Expected Result",
		"open": false,
		
		"error.if.larger": {
			"type": "bool",
			"default": false,
			"description": "Cause fatal error when number of expected URLs is exceeded.",
			"simple": false
		},
		"error.if.smaller": {
			"type": "bool",
			"default": false,
			"description": "Cause fatal error when number of expected URLs is subceeded.",
			"simple": false
		},
		"query": {
			"type": "query",
			"query-results": [
				"single"
			],
			"default": 0,
			"label": "Query for number of URLs:",
			"description": "Query to be performed on content to retrieve the expected number of URLs.",
			"simple": true,
			"position": 1
		}
	},
	"redirect": {
		"label": "Dynamic Redirect",
		"open": false,
		
		"cookies": {
			"type": "string",
			"default": "",
			"label": "Cookies:",
			"description": "Custom HTTP Cookie header on dynamic redirect.",
			"simple": true,
			"position": 7
		},
		"headers": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"description": "Custom HTTP headers on dynamic redirect.",
			"simple": false
		},
		"query.content" : {
			"type": "query",
			"query-results": [
				"bool"
			],
			"default": 0,
			"label": "Query on content:",
			"description": "Query on content that specifies whether to redirect to different URL.",
			"simple": true,
			"position": 2
		},
		"query.url" : {
			"type": "query",
			"query-results": [
				"bool"
			],
			"query-types": [
				"regex"
			],
			"default": 0,
			"label": "Query on URL:",
			"description": "Query on URL that specifies whether to redirect to different URL.",
			"simple": true,
			"position": 1
		},
		"to": {
			"type": "string",
			"default": "",
			"label": "Redirect to:",
			"description": "Sub-URL (for cross-domain websites: URL without protocol) to redirect to.",
			"simple": true,
			"position": 6
		},
		"use.post": {
			"type": "bool",
			"default": false,
			"description": "Use HTTP POST instead of HTTP GET to retrieve URL after redirect."
		},
		"var.names": {
			"type": "array",
			"item-type": "string",
			"default": [],
			"label": "Variable names:",
			"description": "Variable names to be replaced in 'redirect.to', 'cookies' and 'headers'.",
			"simple": true,
			"position": 3
		},
		"var.queries": {
			"type": "array",
			"item-type": "query",
			"query-results": [
				"single"
			],
			"default": [],
			"label": "Variable queries:",
			"description": "Query on variable source to retrieve the value of the variable with the same index.",
			"simple": true,
			"position": 5			
		},
		"var.sources": {
			"type": "array",
			"item-type": "enum",
			"enum-values": [
				"URL",
				"Content"
			],
			"default": [],
			"label": "Variable sources:",
			"description": "Source type of the variable with the same index.",
			"simple": true,
			"position": 4
		}
	}
}
